name: CI
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Formatting
    runs-on: ubuntu-24.04
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Setup | Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
        with:
          components: rustfmt
      - name: Test | Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1.1.1

  clippy:
    name: Clippy
    runs-on: ubuntu-24.04
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Setup | Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
        with:
          components: clippy
      - name: Setup | Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Test | Cargo clippy
        run: cargo clippy -- -Dwarnings

  test:
    name: Test (${{ matrix.os }})
    needs: [ format, clippy ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-24.04 }
          - { os: ubuntu-24.04-arm }
          - { os: macos-15 }
          - { os: windows-2025 }
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Setup | Install mold
        uses: rui314/setup-mold@v1
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Setup | Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
      - name: Setup | Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Build | Build
        run: cargo build --verbose
      - name: Test | Run tests
        run: cargo test --verbose
