name: Release
on:
  release:
    types: [ published ]
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            archive_name: h5sh-x86_64-unknown-linux-gnu.zip
          - target: x86_64-apple-darwin
            archive_name: h5sh-x86_64-apple-darwin.zip
          - target: aarch64-apple-darwin
            archive_name: h5sh-aarch64-apple-darwin.zip
          - target: x86_64-pc-windows-msvc
            archive_name: h5sh-x86_64-pc-windows-msvc.zip
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Setup | Install mold
        uses: rui314/setup-mold@v1
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Setup | Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
      - name: Setup | Install cross [Linux]
        uses: taiki-e/install-action@cross

      - name: Build | Build
        run: cross build --verbose --release --locked --target "${{ matrix.target }}"
      - name: Build | Prepare artifacts [Windows]
        if: "contains(matrix.target, 'windows')"
        run: |
          cd target/${{ matrix.target }}/release
          zip ../../../${{ matrix.archive_name }} h5sh.exe
          cd -
      - name: Build | Prepare artifacts [-nix]
        if: "!contains(matrix.target, 'windows')"
        run: |
          cd target/${{ matrix.target }}/release
          zip ../../../${{ matrix.archive_name }} h5sh
          cd -

      - name: Publish | Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive_name }}
          path: ${{ matrix.archive_name }}
